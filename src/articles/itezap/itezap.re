= みゃー姉に友だちはいないぞ（仮題）

//profile{
四宮かぐや派です
}

//lead{
メイザ・エンダストちゃんをすこれ！よ！
//}

== はじめに

小之森夏音ちゃんが好きです。

== 身体的特徴を使ったアイマスキャラ分析

はじめはキャラの身体的特徴を使ったデータ分析についてです。

=== 回帰分析

回帰とは、予測したい変数 （目的変数）を説明したい変数 （説明変数）でどの程度説明・予測できるかを分析する手法です。
目的変数と説明変数を使った式を回帰式 （回帰モデル）といい、回帰式を導出することを回帰分析といいます。
1つ （1種類）の説明変数@<m>{x}で目的変数@<m>{y}を表す式を単回帰式、式の導出を単回帰分析と呼びます。
一方、2つ以上 （2種類以上）の説明変数を用いる場合は、重回帰分析によって重回帰式を求めます。
以下に最も単純な単回帰式を示します。
@<m>{\beta_{1}}は傾き、@<m>{\beta_{0}}は切片です。

//texequation{
y = \beta_{1}x + \beta_{0}
//}

回帰式の@<m>{\beta_{1}}と@<m>{\beta_{0}}は、実際のデータとの誤差が最小となるようにします。
誤差が最小となるような@<m>{\beta_{1}}と@<m>{\beta_{0}}を決定するために、最小二乗法と呼ばれる手法を使用します。
最小二乗法によって求めた@<m>{\beta_{1}}や@<m>{\beta_{0}}を偏回帰係数と呼びます。

求めた回帰式がデータに対してどれくらい説明できているかを表す指標を決定係数と呼びます。
決定係数は@<m>{R^{2}}で示され、0から1の範囲の値をとります。
1に近いほど、回帰式の説明変数が目的変数をよく説明できている （よく予測できている）、と言えます。

=== 主成分分析

機械学習やパターン認識の分野に携わっている人（関わっていない人もですけど）は必ずというくらい聞く手法ですね。
主な目的はデータの圧縮や簡単化です。
この手法の利点はやはりデータを可視化できる次元（二次元または三次元）にできる点ですね。
もちろん次元を落とすという性質上、情報量が落ちてしまいます。

=== クラスタリング

複数のデータを何個かのグループに分ける手法です。
こちらも有名ですね。
クラスタリングすることでデータの分類ができるので、これを使ってサブデータセットの選定をするなんてことをよくやります。
この手法は各データの正解ラベルがなくても任意のグループに分類できるのがうまあじですね。

=== データセット

データは各キャラの年齢、身長、体重、3サイズを対象とします。
各キャラの情報は「im@sparql」のAPIを使用して取得しました@<fn>{imasparql}。
シンデレラガールズのキャラデータは取得できた186人中、183人のデータを使用します。
3サイズが不明の3人 （佐藤心、大沼くるみ、双葉杏）は、今回のデータから除外としました。
なお、7代目シンデレラガールズこと安部菜々は年齢が不明なのですが、本人の名誉のため17歳とします。
また夢見りあむの3サイズはプロフィール欄では不明なのですが、セリフにてバストが95との情報があるので、そちらを使用します。
ミリオンライブは取得できた全54人 （765組の13人を含む）を対象とします。
さらにシャイニーカラーズの16人も対象とします。
//footnote[imasparql][@<href>{https://sparql.crssnky.xyz/imas/}]

=== 単回帰式（線形）の導出

回帰式を導出する際、ただ闇雲に式を導出・評価するのは効率が悪いのは明白です。
取得したデータ分布 （例えば年齢と身長など）に相関がありそうかを散布図で眺めて狙いをつけます。
例えば、シンデレラガールズたちの年齢と身長・バスト・ヒップの散布図を@<img>{cinderella_hbh_age}に示します。

//imagew[cinderella_hbh_age][年齢と身長・バスト・ヒップの散布図]

例えば、年齢と身長やバストはやや正の相関がありそうですね。
正の相関があるということは、年齢が上がるにつれて身長やバストが増加する、という意味になります（私は年齢が低く、身長や胸が小さいのが好きです）。
それなりに相関があるものは精度の良い （学習データに対して、決定係数が1に近い）回帰式が構築できそうです。
一方、ヒップは身長・バストと比べるとデータが全体に広がっている （散らばっている）印象です。
つまり、年齢が上がるにつれてヒップも大きくなるとは言いにくい、ということです。

では、年齢を説明変数、身長を目的変数とした線形の単回帰式を求めたいと思います。
構築した回帰式のプロット図を@<img>{cinderella_age_height_model}に示します。
図中の丸点は各データ、直線は回帰式のプロットを示します。
さらに左上には回帰式と決定係数を示します。

//image[cinderella_age_height_model][年齢と身長の線形単回帰式プロット]

決定係数が0.46程度と思ったほどよい回帰式にはなりませんでした。
この結果から、シンデレラガールズのキャラは身長と年齢が比例して大きくなる傾向にあるが、そうではないキャラもそれなりにいるということになります。
それはシンデレラガールズのキャラ達の多様性が大きな要因と考えられます。
例えば、諸星きらりのように17歳で180cm以上あるキャラもいれば、片桐早苗のように28歳で150㎝程度のキャラもたくさんいます。
様々な特徴のキャラがいることによって担当のキャラが見つかる確率が上がるので、とてもよいことだと思います。

もう一例として、年齢とバストの線形単回帰式を求めます。
結果のプロット図を@<img>{cinderella_age_bust_model}に示します。

//image[cinderella_age_bust_model][年齢とバストの線形単回帰式プロット]

決定係数は0.4程度となり、身長の時よりも精度は落ちています。
この結果から、身長よりバストのほうが多様性がある、ということですね。

=== 単回帰式（非線形）の導出

先ほどは年齢と身長・バストを対象に線形の単回帰式を求めました。
ですが、それぞれの散布図を見た限り、直線より曲線のほうが良い回帰式になりそうです。
そこで、次は非線形の単回帰式を求めてみたいと思います。
年齢と身長の非線形回帰式のプロットを@<img>{cinderella_age_height_polymodel}に、年齢とバストの非線形回帰式のプロットを@<img>{cinderella_age_bust_polymodel}に示します。

//image[cinderella_age_height_polymodel][年齢と身長の非線形単回帰式プロット]

//image[cinderella_age_bust_polymodel][年齢とバストの非線形単回帰式プロット]

決定係数が0.6と0.53になり、どちらも0.1以上の向上が見られました。
なのでこれらのデータに関しては、直線よりも曲線のほうがよい回帰式になることがわかりました。
しかし決定係数がまだ0.6程度なので、これがベストな回帰式だ、とは言いにくいと考えられます。

回帰式をより複雑にすれば精度は向上しますが、その場合には過学習の問題が発生します。
ここでの過学習とは、学習データに合わせすぎた回帰式を求めてしまい、他のデータや未知のデータに対しての汎用性が悪くなってしまう、というものです。
回帰式の汎用性と予測精度の両立は難しい問題です。

=== 単回帰式の性能評価

テストデータを使って、求めた単回帰式の性能評価をしてみましょう。
線形単回帰式のプロットを@<img>{MilliShiny_age_hb_model_pred}に、非線形単回帰式のプロットを@<img>{MilliShiny_age_hb_polymodel_pred}に示します。
図中の三角はテストデータを表し、@<m>{R^{2}}はテストデータの説明・予測の精度を示しています。

//image[MilliShiny_age_hb_model_pred][線形単回帰式プロット]

//image[MilliShiny_age_hb_polymodel_pred][非線形単回帰式プロット]

…線形・非線形ともによい精度とは言えませんね。
年齢と身長の回帰式においては、非線形でも決定係数が0.16とかなり低くなりました。
一方、年齢とバストの回帰式においては決定係数が0．29と多少高くなりました。
この結果より、学習データからテストデータを説明・予測することは難しいといえます。
言い換えると、シンデレラガールズとミリオンライブ＋シャイニーカラーズにおいては、同年齢層の身長やバストのデータ分布は異なると考えられます。
なるべく他シリーズのキャラと特徴が被らないようデザインされていることがわかりますね。

=== 重回帰式の導出と評価

今までは説明変数が一つの場合のみを考えましたが、それほど高い精度は得られませんでした。
そこで説明変数を増やした場合にどれくらい精度が上がるのか調査します。
今回は年齢・体重・3サイズから身長を予測する重回帰式を求めます。
さらに年齢・身長・体重・ウエスト・ヒップからバストを予測する重回帰式も求めます。

重回帰式は説明変数が複数あり図示できないので、導出した回帰式の標準化偏回帰係数を@<table>{multi_reg_coeff}に示します。
ここでの標準化偏回帰係数とは、目的変数にどれくらい影響があるかを表す偏回帰係数です。
通常、偏回帰係数は大小を直接比較することはできません （各データの単位などが異なることがあるため）。
ですが、説明変数と目的変数をそれぞれ標準化 （平均0、分散1となるようにデータを変換すること）することで同じ尺度に揃えることができ、比較が可能になります。
標準化偏回帰変数は大きいほど、目的変数への影響力が高いです。
身長を予測する重回帰式をモデル1、バストを予測する重回帰式をモデル2とします。
各標準化偏回帰係数は、小数点第3位で四捨五入しています。

//tabooular[multi_reg_coeff][各モデルの標準化偏回帰係数一覧]{
説明変数	|	モデル1	&	モデル2
==========>|====&====
年齢	|	0.22	|	0.08	
身長	|	*	|	-0.09	
体重	|	0.76	|	0.40	
バスト	|	-0.19	|	*	
ウエスト	|	0.26	|	0.51	
ヒップ	|	-0.21	|	-0.06
//}

決定係数は、モデル1が0.76、モデル2が0.85とそこそこ良い回帰式ができました。
各係数の数値を見ると、身長を予測するには体重が最も影響力が高く、バストを予測するにはウエストが最も影響力が高いことがわかりました。
身長に一番影響を与えるのは体重というのは直感的にわかりますが、バストに一番影響を与えるのがウエストなのは少し意外でした （体重だと思っていたので）。

テストデータを使って、導出した重回帰式の性能評価を行いましょう。
その結果、モデル1の決定係数は0.6、モデル2が0.74と、単回帰の場合と比較してかなり良くなりました。
この予測精度なら、アイマスキャラの回帰モデルができた、といってもいいかもしれません。

今回はデータセットの全ての特徴を使って重回帰式の導出を行いました。
ですが、@<table>{multi_reg_coeff}を見る限り、全ての特徴を使う必要はないかもしれません。
例えば、モデル1は年齢・体重・ウエストだけで十分な精度が出る可能性があります。
最適な説明変数群を見つける手法はいくつかあるので、それを使うと最適な回帰式ができると思います。

== 新たなキャラ達とその予測結果

2018年12月から2月にかけて、新たなキャラがシンデレラガールズに追加されました。
辻野あかりちゃん、砂塚あきらちゃん、夢見りあむのお三方です。
彼女らの共通点として、SNS世代というなんとも現代的な設定があります。

構築した単回帰モデルにプロットしてみましょう。
単回帰モデルは、精度の高かった非線形の方を使用します。

=== 幼少組クラスタリング

シンデレラガールズの幼少組（9~12才）の身体データを使って発育をチェックしてみましょう。
今回は主成分分析によって6次元データを2次元に圧縮し、クラスタリングを行います。
2次元キャラの6次元データを2次元に圧縮します（字面だけみると不思議な文章です）。
身体データは各キャラの年齢、身長、体重、バスト、ウェスト、ヒップを使います。
クラスタ数は年齢の幅と同じ4とします。

主成分分析、クラスタリングを行った結果を@<table>{lori_claster1}に示します。

//tabooular[lori_claster1][幼少組クラスタリングの結果1]{
名前	|	年齢（クラスタ）	&	本来の年齢
==========>|====&====
赤城みりあ	|	12	|	11	
市原仁奈	|	9	|	9	
櫻井桃華	|	11	|	12	
佐々木千枝	|	12	|	11	
橘ありす	|	10	|	12	
遊佐こずえ	|	9	|	11
横山千佳	|	9	|	9	
龍崎薫	|	9	|	9	
佐城雪美	|	10	|	10	
福山舞	|	9	|	10	
メアリー・コクラン	|	11	|	11	
古賀小春	|	12	|	12
城ヶ崎莉嘉	|	11	|	12	
的場梨沙	|	12	|	12	
結城晴	|	12	|	12
//}

ちゃまや莉嘉が11才のクラスタに所属してしまいました。
他の子たちも若干の年齢のズレがあります。
随分発育のよい11才ですね。

実際の年齢と年齢クラスタが異なる原因はなんでしょうか。
考えられる原因として、単位の違うデータ(今回は年齢と身長とか)をひとくくりにしてしまっているので、数値の大きいデータに引っ張られている可能性があります。
なので、主成分分析をする前のデータを標準化します。
標準化することによってデータの分散を統一することができます。
標準化は全ての値に対してその変数の平均を引いて、その変数の標準偏差で割ることで得られます。
各データを標準化して、もう一度クラスタリングした結果を@<table>{lori_claster2}に示します。

//tabooular[lori_claste2][幼少組クラスタリングの結果2]{
名前	|	年齢（クラスタ）	&	本来の年齢
==========>|====&====
赤城みりあ	|	12	|	11	
市原仁奈	|	9	|	9	
櫻井桃華	|	12	|	12	
佐々木千枝	|	11	|	11	
橘ありす	|	11	|	12	
遊佐こずえ	|	10	|	11
横山千佳	|	9	|	9	
龍崎薫	|	10	|	9	
佐城雪美	|	10	|	10	
福山舞	|	9	|	10	
メアリー・コクラン	|	12	|	11	
古賀小春	|	12	|	12
城ヶ崎莉嘉	|	12	|	12	
的場梨沙	|	12	|	12	
結城晴	|	12	|	12
//}

異なるクラスタに属する人数が8人から6人に減少しました。
実年齢より上のクラスタに属する子（発育の良い子）、下のクラスタに属する子（これからに期待の子）がいますね。
例えばありすは12才ですが、11才のクラスタに属しています。
12才クラスタの面々のプロフィールと比較すると、多少数値が見劣りするかもしれません。
ですが、そこもまた魅力の一つだと思います。
僕は小さいのが好きです。

次にミリオンライブの年少組のデータを加えてクラスタリングしてみます。
@<table>{lori_claster3}に結果を示します。

//tabooular[lori_claste3][幼少組クラスタリングの結果3]{
名前	|	年齢（クラスタ）	&	本来の年齢
==========>|====&====
中谷育	|	12	|	10	
周防桃子	|	11	|	11	
大神環	|	12	|	12	
//}

なんと、育ちゃんが12才クラスタに属しています。
さすが育さんです。
育ちゃんのプロフィールと10才クラスタの面々のプロフィールを比較すると、育さんの発育の良さがわかります。
これは将来に期待ですね。

次にシャイニーカラーズの小宮果穂ちゃんを考えます。
果穂ちゃんは12才にも関わらず、高校生組と考えてもいいくらいのスタイルの持ち主です。
このことから、果穂ちゃんを入れた場合、クラスタリング結果が大きく変わることが予想されます。
その影響がどれくらい出るのか、クラスタリングしてみたいと思います。
結果を@<table>{lori_claster4}に示します。

//tabooular[lori_claste4][幼少組クラスタリングの結果4]{
名前	|	年齢（クラスタ）	&	本来の年齢
==========>|====&====
赤城みりあ	|	11	|	11	
市原仁奈	|	9	|	9	
櫻井桃華	|	11	|	12	
佐々木千枝	|	11	|	11	
橘ありす	|	11	|	12	
遊佐こずえ	|	10	|	11
横山千佳	|	9	|	9	
龍崎薫	|	9	|	9	
佐城雪美	|	10	|	10	
福山舞	|	9	|	10	
メアリー・コクラン	|	11	|	11	
古賀小春	|	11	|	12
城ヶ崎莉嘉	|	11	|	12	
的場梨沙	|	11	|	12	
結城晴	|	11	|	12
中谷育	|	11	|	10	
周防桃子	|	11	|	11	
大神環	|	11	|	12	
小宮果穂	|	12	|	12
//}

予想通りでした。
果穂ちゃん一人だけが12才クラスタに属してしまい、それによって他の子達が大きくその影響を受けています。
それだけ果穂ちゃんは規格外ということですね。
また、情報学的にいうと果穂ちゃんは「外れ値」となるため、何らかの対策が必要になります。

== アイマスとケモインフォマティクス

vol4で書いた化合物の記事を書く

== アイマスとバイオインフォマティクス

vol5で書いたタンパク質の記事を書く

== おわりに

いかがでしたか。