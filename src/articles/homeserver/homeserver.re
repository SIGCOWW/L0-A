= お古のノートPCを自宅Webサーバ化して好きなようにやろう その1
@<author>{きつねじゃい！, conchan_akita}
//profile{
更新停止
//}

//lead{
その1では、動機についてと、ハードウェアとOSの準備について述べます。
ソフトウェアについては今回取り上げていませんが、作業日時点で最新のものを使うというポリシーで進めており、文献が少なくてちょっと貴重な情報なのでは、って思ったりです。
//}


== 自己紹介

こんにちは。
コンちゃん(conchan_akita)と申します。

この記事が載っている同人誌はSIGCOWWというサークルが頒布していますが、私は普段SIGCOWWの売り子を担当しており、記事を書くのは初めてとなります。

よろしくお願いします。


=== 著者詳細（ここいる？）

自宅サーバ2代目


== 動機

いったいどうして、お古のノートPCを自宅Webサーバ化して好きなようにやっちゃっているのか、そんな話です。


=== ブログを始めたい

ふと、ブログやりたいと思ったことがすべての始まりだったような気がします。
ブログの記事テーマは趣味とか、作ったものとか。

さて、私の数多い趣味の中に、旅行・旅先の写真撮影があります。
その写真ももちろん載せたいわけです。

ここである問題に気がつきます。
無料のブログサービスだと、無料で使える容量が制限されており(1GBまで等)、せっかく撮った写真も大きなサイズでお見せすることができない、と。
当時私が使っていたデジカメだと、写真1枚で3MB～4MB。
さすがにそのまま載せるのは大きすぎるので縮小するとはいえ、1枚1MB換算で1000枚で容量一杯になってしまいます。

それなら、自分でサーバを用意してしまえば良いじゃない！！！


=== ネットワークに強くなりたい

もう1つ、思っていたことがあります。
それは、「ネットワーク技術に強くなりたい」ということです。
ネットワーク界隈、無限に難しくないですか？？？？

官公庁や学校等にPCを設置・設定するアルバイトをしていたある時、社員さんとのお昼ご飯のタイミングで「ネットワークに強くなるのはどうしたら良いですか？」と聞きました。
すると、「自分でサーバやってみれば？」とのお返事。

かくして、「自宅サーバを作ってブログをやる」という目標ができたのでした。


=== 裏の理由

自宅サーバじゃなくてレンタルサーバを使う手もありますが、月額料金がかかるので却下しました。
また、就活時に「自宅サーバ作った」って言えたらアピールになるだろうなーって思いもありました。


== 自宅サーバの始め方

さて、ここからは実際に私が自宅Webサーバを作ったときの手順を紹介(詳解)します。
初めに注意を書いておくと、家で常時PCの電源を入れておくわけですが火事になっても私は責任を負いませんので、自宅サーバをやる人は自己の責任と覚悟のもとでお願いします。


=== 準備するもの

 * サーバとなるPC
 * OSのインストールメディア等インストールに必要なもの
 * PCを置く場所
 * 無限に湧き出る未知の事態に対してひたすら検索するという気合と検索用PC
 * 責任と家が燃えても良いという覚悟

今回、サーバとなるPCにはお古のノートPCを用意しました。
実は1代(台)目はゲリラ雷雨でお亡くなりになりまして、2代(台)目となるのですが、初代は2002年SHARP製のWinXP、現役なのは2008年TOSHIBA製のWinXPです。

私は@<img>{IMG_1719}のものたちを用意しました。
PCの後ろは外付けDVDドライブです。

//image[IMG_1719][用意したもの]{
//}


====[column] サーバに使っていたノートPCの思い出

アルバイト関係である部屋(実質倉庫)の掃除をしていたときにノートPCを3台見つけ、許可とってもらってきたものが初代と2代目になります(残り1台はどこに置いたか記憶がない)。

初代のノートPCはバッテリまわりがボロボロで、満充電したはずが残量15%しかない、みたいなPCで、なるほどこれは倉庫行きだなーって。
ある日のゲリラ雷雨で停電(瞬停)したんですが、停電前に「これはやばい」って思って電源ケーブルをコンセントから引っこ抜いて、その後はkernel panicが起きて起動しなくなりました。
2か月くらい格闘しても治せなかったのでお亡くなり認定。
今となってはスペックが低く、OSのインストールから大変な子でした。

2代目は初代よりも新しいPCですが、ACアダプタがなく、ディスプレイも故障しているようでした。
ACアダプタはBUFFALO製の物(3000円くらいだったかな)を買い、友達の力を借りて外部ディスプレイ接続を試すと表示されたので、ディスプレイ交換すれば行ける！とわざわざノートPCのヒンジを外してディスプレイを外し、適合するディスプレイを調べて買い(検索したら見つかった)、装着したんです。
ディスプレイ、7000円くらいした記憶があります。
値段もそうですがディスプレイ交換は初めてで結構大変だった記憶もあります。


=== 設置

//image[IMG_1721][設置]{
//}

@<img>{IMG_1721}のように、ラックを置いて、その上にノートPCを置いて、電源コードとLANケーブルを挿すだけ。
キンチョールは気にしないでください。


=== 起動確認

前に電源入れた時から時間が経過しているので、まずは起動確認。
おや、@<img>{IMG_1723}が表示されました...？

//image[IMG_1723][CMOS ERROR]{
//}

しばらく通電していないPCではCMOSバッテリーが空になるのかな？
ひとまず継続。

//image[IMG_1724][WinXP]{
//}

@<img>{IMG_1724}のとおり、WinXPの起動画面が出ました。


== OSのインストール

前の持ち主が使っていたWinXPには、サーバ化するにあたり不要なものが多いので、Linux系OSを上書きインストールしちゃいます。
私はUbuntu 18.04 LTSを選択しました(が、これはのちに間違いだと分かります)。
また、勉強のためにGUI環境は入れず、CUI環境一本でいきます。


=== インストールメディアの用意

Ubuntuのisoを用意して、それを何らかの手段でWinXPの起動前に認識させる必要があります。
私は普段使いのノートPCでDVD-RにUbuntuのisoを焼き(@<img>{IMG_1730})、サーバPCにUSB接続の外付けDVDドライブを接続してisoを焼いたDVDを読み込ませる方法をとりました。

//image[IMG_1730][Ubuntu18.04iso]{
//}

ここでの注意点は2点です。
1つ目は、記事執筆時点で最新のUbuntu18.04 LTSは64bitしか対応していないので、サーバPCが32bitの場合インストールできないということです。
私は見事にこれに引っ掛かり、最初に64bit版isoを焼いてインストールに失敗しました。
失敗時の様子は@<img>{IMG_1734}のとおり。
32bit版をインストールする場合、1個前バージョンのUbuntu Server 16.04の32bit版をインストールしてインストール後に @<tt>{do-release-upgrade}を走らせて18.04にすると良いです。

//image[IMG_1734][64bitインストール失敗]{
//}

2つ目は、読み込み順序です。
内臓ドライブ(HDD)の読み込み順がUSBよりも早くなるように設定されている場合、ただ単に外付けドライブのUSBを挿してもisoが読み込まれずWinXPが起動してしまいます。
読み込み順番はBIOS画面で設定できるので、@<img>{IMG_1739}のようにBIOSを起動し、読み込み順番を変えてあげましょう。

//image[IMG_1739][BIOS起動直後]{
//}

@<img>{IMG_1741}のように、USBを先頭に持ってきます。

//image[IMG_1741][BIOSで読み込み順番を変更]{
//}


=== インストール

無事にisoを読み込んだら、そのままインストールプロセスに突入です。
最初はインストール時の言語選択画面(@<img>{IMG_1742})。

//image[IMG_1742][言語選択画面]{
//}

言語は日本語でいきます。

そしていよいよUbuntuのインストールです(@<img>{IMG_1743})。

//image[IMG_1743][いよいよインストール開始]{
//}

翻訳が完全ではないそうですが構わず続けます(@<img>{IMG_1745})。

//image[IMG_1745][翻訳が完全じゃない]{
//}


==== 最初の設定

場所は日本です(@<img>{IMG_1746})。

//image[IMG_1746][場所の選択]{
//}

キーボードはJapaaneseです(@<img>{IMG_1747})。

//image[IMG_1747][キーボードの設定]{
//}

キーボードの設定(@<img>{IMG_1748})。
1番上のJapaneseを選択。
Mac用の選択肢もあるようです。

//image[IMG_1748][キーボードの設定]{
//}

ここからは待ち時間がちょこちょこ発生します(@<img>{IMG_1749})。

//image[IMG_1749][待ち時間]{
//}


==== ネットワーク設定

//image[IMG_1751][ネットワーク設定]{
//}

ネットワークインターフェイスの選択画面です(@<img>{IMG_1751})。
2つ見つかりましたが、下の選択肢はWirelessとか無線とか見えます。
有線接続を使用するので上の選択肢で。


//image[IMG_1754][ネットワーク設定2]{
//}

ホスト名の入力画面です(@<img>{IMG_1754})。
私はわりかし適当な名前にしました。

このあと、ユーザとパスワードのセットアップになります。
ユーザの本名、アカウントのユーザ名、パスワードを入力します。
本名は何でも良いでしょう。
アカウントのユーザ名はログイン時に使うことになりますので、パスワードと合わせて忘れないようにしましょう。
ちなみにアカウントのユーザ名に大文字が使えませんでした。


==== 時間の設定

//image[IMG_1759][時間の設定]{
//}

時間の設定(@<img>{IMG_1759})。
ここは英語ですね...。


==== パーティショニングの設定

//image[IMG_1760][ディスクのパーティショニング]{
//}

ディスクのパーティショニング(@<img>{IMG_1760})。
画像では「いいえ」を選んでいますが、ここどっちを選んだか覚えていません。

//image[IMG_1761][ディスクのパーティショニング2]{
//}

ディスクのパーティショニングその2(@<img>{IMG_1761})。
ここも何を選んだか覚えていませんが、WinXPを上書きしたかったのでディスク全体を使うようにはしたはず。

//image[IMG_1762][ディスクのパーティショニング3]{
//}

ディスクのパーティショニングその3(@<img>{IMG_1762})。
ディスク選択画面。
1つしかないのでこれを選択。

//image[IMG_1763][ディスクのパーティショニング4]{
//}

ディスクのパーティショニングその4(@<img>{IMG_1763})。
確認画面です。
「LVMを設定しますか？」と聞かれているので、少し前の画面でLVMのセットアップをする選択肢を選んだようです。

//image[IMG_1764][ディスクのパーティショニング5]{
//}

ディスクのパーティショニングその5(@<img>{IMG_1764})。
パーティショニングのサイズを聞かれています。
デフォルトで最大サイズが入力されていたような気がするのでそのまま。

//image[IMG_1765][ディスクのパーティショニング6]{
//}

ディスクのパーティショニングその6(@<img>{IMG_1765})。
パーティショニングの最終確認画面です。
「はい」を選択。


==== OSの基本的なところの設定

//image[IMG_1767][ファイル書き込みスタート]{
//}

ついにディスクにファイルが書き込まれます(@<img>{IMG_1767})。
待ち時間が発生しますが、ちょこちょこ設定画面が出るので確認していきましょう。

//image[IMG_1768][パッケージマネージャの設定]{
//}

プロキシ設定画面です(@<img>{IMG_1768})。
プロキシ情報が必要なら入力してください。
私は空にしました。

//image[IMG_1770][taskselを設定しています]{
//}

@<img>{IMG_1770}はよく分かっていないのですが、とりあえずアップデートは手動でやるつもりなので「自動的にアップデートしない」を選択した、はず。


==== ソフトウェアの選択と設定

//image[IMG_1771][ソフトウェアの選択]{
//}

インストールするソフトウェアを選択します(@<img>{IMG_1771})。
以下を選択しました。

 * LAMP server
 * Mail server
 * standard system utilities
 * OpenSSH server

ただ、LAMP serverを入れたのは失敗だったと思っています。
AはApache HTTP Serverを意味していますが、今回はApacheではなくnginxを入れる予定で進めており、nginxを入れる前にApacheを削除するという手間が発生したからです。
WebサーバにApacheを使うかnginxを使うかでインストールの有無を決めると良いでしょう。
ちなみに私は初代Webサーバでは日本語文献が多いApacheを選択していました。

//image[IMG_1772][ソフトウェアの選択とインストール]{
//}

ソフトウェアのインストール作業中の様子(@<img>{IMG_1772})。
画像では3時間30分とありますが実際は3時間もかからず、でもインストールプロセス全体で1時間はかかった気がします。

//image[IMG_1773-2][mysql-server-5.7を設定しています]{
//}

LAMPのMはMySQLなので、MySQLの設定を@<img>{IMG_1773-2}で行います。
ここも失敗点がありまして、
 * 最新のMySQL8系を入れたかったのに5系が入る
 ** やっぱり削除の手間が発生する
 * ここでrootのパスワードを設定したことをすっかり忘れていた
 ** 後でrootパスワード求められて「そんなの知らない！！」ってなった

って感じです。
写真撮っておいて正解でした。

//image[IMG_1774][Postfix Configuation]{
//}

メールの設定画面です(@<img>{IMG_1774})。
メールサーバはすぐに使う予定はないけどいつか使うかなーと思って入れます。

//image[IMG_1775][Postfix Configuation2]{
//}

メールの設定画面その2(@<img>{IMG_1775})。
メールのアットマーク以下を指定するっぽいです。
ドメイン取得済みでそのドメインを使用する方はそれを入力しましょう。


==== 最終処理

//image[IMG_1776][ハードディスクへのGRUBブートローダのインストール]{
//}

@<img>{IMG_1776}もよく分かりませんでした。
何がどうなるのかよく分からないけど読んだ限り「はい」で問題なさそうだったので「はい」。

//image[IMG_1778][インストールの完了]{
//}

@<img>{IMG_1778}が表示され、インストール完了です！！

それでは、インストールメディアを外し、BIOSの起動順番設定も元に戻して、いざUbuntu起動！


== インストール直後にやること

//image[IMG_1779][ログイン後]{
//}

@<img>{IMG_1779}はちょいと見にくいですが、無事にログインできています。

ログインできたら、早いうちに @<tt>{sudo apt update}と@<tt>{sudo apt upgrade}で更新してあげましょう。
そのあとに @<tt>{sudo do-release-upgrade}でUbuntuのバージョンを上げましょう。
Ubuntuバージョンアップも数時間レベルで時間かかることを覚悟しましょう。
また、途中で「設定ファイルに更新入るけどどうする？」的ダイアログが何回か表示されるかもしれません。
私はとりあえず「現在のバージョンを保持」みたいな選択肢を選びました。


=== 日本語環境のセットアップ

画面表記が文字化けする場合は @<tt>{export LANG=C}で英語設定にしましょう。
ただしこれは臨時回避策で、日本語は結局うまく扱えなさそうです。
そこで、以下4行を @<tt>{~/.bashrc}と @<tt>{/etc/skel/.bashrc}に追記して、サーバPCの画面上は英語、SSHでサーバPC以外からサーバPCに接続するときには日本語で見えるように設定します。
//cmd{
case $TERM in
    linux) LANG=C;;
    *)     LANG=ja_JP.UTF-8;;
esac
//}
なおこの設定は先駆者のサイト@<fn>{senkusha}を参考しました。
//footnote[senkusha][@<href>{https://www.yokoweb.net/2018/05/04/ubuntu-18_04-lts-server-japanese}]

//image[IMG_1790][.bashrc設定中]{
//}

最下部に追記した様子を@<img>{IMG_1790}に示します。


== その1の終わりに

今回はここまで。
次回以降は以下を予定しています。

 * ssh環境の準備
 * nginxのインストール
 * WordPressのインストール
 * ドメインを使えるようにする
 ** MyDNS
 ** ドメイン会社の管理画面での設定
 ** ルータの設定

これからが本番、って感じありますねぇ！

それでは。